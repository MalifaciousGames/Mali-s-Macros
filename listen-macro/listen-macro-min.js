/* Mali's <<listen>> macro for Sugarcube */

Macro.add("listen",{tags:["when"],config:{silent:!1,init:!1,defaultEvents:["change"]},isAsync:!0,argsToObj:function(t){let e={},s=0;for(;s<t.length;){const n=t[s];if(Array.isArray(n))t.splice(s--,1,...n);else if("object"==typeof n)Object.assign(e,n);else{const i=t[s+=1];if(void 0===i)throw new Error("Uneven number of arguments.");e[n.toLowerCase()]=i}s++}return e},processPayload(t,e){const s={init:this.self.config.init,silent:this.self.config.silent,events:[]};for(const e of t.args)if("string"==typeof e)switch(e.toLowerCase()){case"init":s.init=!0;break;case"silent":s.silent=!0;break;default:s.events.push(e)}s.events.length?s.events=s.events.flat(1/0).map((t=>t.split(/\s|,/g))).flat().filter((t=>t)):s.events=this.self.defaultEvents,s.silent||(s.output=$("<span>",{class:`macro-${this.name}-output`,"data-event":s.events.join(" ")}).appendTo(e));const n=this[this.shadowHandler?"shadowHandler":"createShadowWrapper"]((function(e){State.temporary.event=e,s.silent?$.wiki(t.contents):s.output.empty().wiki(t.contents)}),(()=>delete State.temporary.event));e.on(s.events.join(" "),n),s.init&&n()},handler(){const t=this.self.argsToObj(this.args),e=t.type||"span";delete t.type;const s=$(`<${e}>`,t).addClass(`macro-${this.name}`).wiki(this.payload[0].contents).appendTo(this.output);for(const t of this.payload.slice(1))this.self.processPayload.call(this,t,s)}});